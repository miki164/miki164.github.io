{
    "componentChunkName": "component---src-components-posts-layout-js",
    "path": "/notes/To-read-list",
    "result": {"data":{"mdx":{"id":"aa8922a9-4447-58ec-875f-6e12ea781051","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"To read list\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Here I'm storing all of titles/authors which/who I want read.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Author\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Title\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Dariusz Kulik\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Turbulencja\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Marek Aureliusz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Rozmy\\u015Blania\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Viktor E. Franki\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cz\\u0142owiek w poszukiwaniu sensu\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Aldous Huxley\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Wyspa\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Cejrowski\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Marko margini\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xF3zg\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Charles T. Munger\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Poors Charlie's Almanack\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Ray Dalio\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Zasady\")))), mdx(\"p\", null, \"| \"));\n}\n;\nMDXContent.isMDXComponent = true;"},"allMdx":{"nodes":[]}},"pageContext":{"id":"aa8922a9-4447-58ec-875f-6e12ea781051","titleRegex":"/To read list/","slug":"To-read-list"}},
    "staticQueryHashes": ["1748999444"]}