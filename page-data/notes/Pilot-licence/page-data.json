{
    "componentChunkName": "component---src-components-posts-layout-js",
    "path": "/notes/Pilot-licence",
    "result": {"data":{"mdx":{"id":"b1609185-4f33-5a87-8829-912ca0a760ff","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"‚úàÔ∏è Pilot license\",\n  \"aliases\": [],\n  \"tags\": [\"üí≠empty-idea\"],\n  \"date\": \"2021-10-03T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uD83C\\uDF31 2021-10-03\"), mdx(\"h1\", null, \"\\u2708\\uFE0F Pilot licence\"), mdx(\"hr\", null), mdx(\"p\", null, \"Licenses:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PPL - Private pilot licence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MPL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CPL - Comercial pilot licence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ATPL -  Airline transpot pilot licence\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPL - gliders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BPL - Balloon\")), mdx(\"h2\", null, \"PPL\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PPL(A) - plane\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PPL(H) - helicopter\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PPL(AS) - airship\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PPL(AG)\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"allMdx":{"nodes":[]}},"pageContext":{"id":"b1609185-4f33-5a87-8829-912ca0a760ff","titleRegex":"/‚úàÔ∏è Pilot license/","slug":"Pilot-licence"}},
    "staticQueryHashes": []}