{
    "componentChunkName": "component---src-components-posts-layout-js",
    "path": "/Ivy-Lee-method",
    "result": {"data":{"mdx":{"id":"6cbf28ba-1802-5cf9-80b0-1fb7e25b9769","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ðŸ“‘ Ivy Lee method\",\n  \"aliases\": [],\n  \"tags\": [],\n  \"date\": \"2021-10-02T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"2021-10-02\"), mdx(\"h1\", null, \"\\uD83D\\uDCD1 Ivy Lee method\"), mdx(\"p\", null, \"Related:\"), mdx(\"hr\", null), mdx(\"p\", null, \"It's time managment technique, that allows to creating and ending \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"Goals\",\n    \"title\": \"ðŸŽ¯ Goals\"\n  }, \"\\uD83C\\uDFAF Goals\"), \".\"), mdx(\"h2\", null, \"How it works\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On the end of the day create six \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"Goals\",\n    \"title\": \"ðŸŽ¯ Goals\"\n  }, \"\\uD83C\\uDFAF Goals\"), \" to do on next day\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sort them by their priority\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On next day start with the first one goal\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"when you complete one go to the next\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"If you don't finish all tasks in one day, incomplete goals automatically roll over on the next day list\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"allMdx":{"nodes":[]}},"pageContext":{"id":"6cbf28ba-1802-5cf9-80b0-1fb7e25b9769","titleRegex":"/ðŸ“‘ Ivy Lee method/","slug":"Ivy-Lee-method"}},
    "staticQueryHashes": ["1748999444"]}